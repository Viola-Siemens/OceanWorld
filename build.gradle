buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        jcenter()
        mavenCentral()
        maven { name="sponge"; url 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'

version = '6.0.0'
group = 'com.hexagram2021.oceanworld'
archivesBaseName = 'oceanworld'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.4'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run/client')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'oceanworld'
            
            mods {
                oceanworld {
                    source sourceSets.main
                }
            }
        }
        
        server {
            workingDirectory project.file('run/server')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'oceanworld'
            
            mods {
                oceanworld {
                    source sourceSets.main
                }
            }
        }
        
        gameTestServer {
            workingDirectory project.file('run/test_server')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'oceanworld'
            
            mods {
                oceanworld {
                    source sourceSets.main
                }
            }
        }
        
        data {
            workingDirectory project.file('run/data')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'oceanworld', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            
            mods {
                oceanworld {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'Mod Maven'
        url 'https://modmaven.dev/'
    }
	maven {
        name 'theillusivec4\'s Maven'
        url 'https://maven.theillusivec4.top/'
    }
    maven {
        name 'Curse Maven'
        url 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.2.0'
	
	compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.4")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.4-forge:13.1.0.15")
    runtimeOnly fg.deobf("curse.maven:jade-324717:4573063")
    runtimeOnly fg.deobf("curse.maven:custom_world_generation-913105:4809360")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Ocean World",
                "Specification-Vendor"    : "Hexagram",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Hexagram",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
